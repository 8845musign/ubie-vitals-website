---
import {unionBy} from 'es-toolkit';
import PropsTable from '@components/astro/PropsTable.astro';
import RepositoryLink from '@components/astro/RepositoryLink.astro';
import ExampleSwitcher from '@components/react/ExampleSwitcher';
import PostLayout from '@layouts/PostLayout.astro';
import { extractPropsFromFile, getAllExample, buildComponentPath } from '@utils/server';
import {convertTypeSetKeyword} from "../utils/server/props/convertTypeSetKeyword";
import type {Prop} from "../types";
import type { MarkdownLayoutProps } from 'astro';

type Props = MarkdownLayoutProps<{
  title: string;
  description: string;
  exampleKey: string;
  repositoryUrl?: string;
  baseElement?: string;
  allowClassName?: boolean;
  exampleSize?: 'md' | 'lg',
  props?: Array<Prop>
}>;


const { frontmatter } = Astro.props;

const { exampleKey, props = [] } = frontmatter;

const filePath = buildComponentPath(exampleKey);

const convertedProps = props.map(prop => {
  return {
    ...prop,
    type: convertTypeSetKeyword(prop.type)
  }
})

// Add data-* to all components (because the types are too complex to extract)
const propsArray: Prop[] = [...unionBy(convertedProps, extractPropsFromFile(filePath),(p) => {
  return p.name
}), {
  name: 'data-*',
  type: 'string',
  description: 'Custom data attributes',
  required: false,
}];
propsArray.sort((a, b) => {
  return a.name.localeCompare(b.name);
})

const examples = getAllExample(frontmatter.exampleKey);
---

<PostLayout
  frontmatter={{
    title: frontmatter.title,
    description: frontmatter.description,
  }}
>
  {
    frontmatter.repositoryUrl && (
      <span class="repositoryLink" slot="headingSide">
        <RepositoryLink href={frontmatter.repositoryUrl} targetName="Copmonent" />
      </span>
    )
  }
  <section>
    <h2 id="Example">
      Example<a class="linkHeading" href="#Example"><span class="linkHeadingIcon">#</span></a>
    </h2>

    <ExampleSwitcher size={frontmatter.exampleSize} examples={examples} client:only="react" />

    <section>
      <h2 id="Props">
        Props<a class="linkHeading" href="#Props"><span class="linkHeadingIcon">#</span></a>
      </h2>

      {
        frontmatter.baseElement && (
          <p class="baseElement">
            <!-- eslint-disable-next-line -->
            <code>&lt;{frontmatter.baseElement}&gt;</code>要素をベースにしています。 表にない属性もprop経由で使用できます{frontmatter.allowClassName ? '' : '（classNameは除く）'}。
          </p>
        )
      }

      <PropsTable propsArray={propsArray} />
    </section>
    <slot />
  </section>
</PostLayout>

<style>
  .repositoryLink {
    display: flex;
    align-items: center;
    padding-top: 0.1em;
  }

  .baseElement {
    margin-bottom: var(--size-spacing-md);
  }
</style>
